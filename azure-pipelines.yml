# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  webAppName: 'your-web-app-name'
  resourceGroupName: 'your-resource-group-name'
  location: 'East US'

steps:
- task: UseDotNet@2
  inputs:
    version: '7.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'
    vstsFeed: '<your-VSTS-feed-ID>'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'Build the application'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish the application'
  inputs:
    command: 'publish'
    publishWebProjects: true
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy to Azure App Service'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '14b07d2a-dd5a-4380-999b-eac9f6d6112f'
    appType: 'webApp'
    WebAppName: '$(webAppName)'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/{your-app-name}.zip'
    ResourceGroupName: '$(sw)'
    regionName: '$(EAST US2)'
